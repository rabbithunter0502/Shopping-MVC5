@model Shopping.Models.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
    <div class="container-fluid">
        <h2>Create</h2>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Product</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OldPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OldPrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OldPrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        <img id="preview" src="#" class="hidden img-thumbnail" style="width: 100px" alt="Alternate Text" />
                        @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control", @type = "hidden" } })
                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                        <div style="margin-top: 5px">
                            <button type="button" id="upload_widget" class="btn btn-primary">Upload files</button>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
    </div>
        @section scripts{
            <script src="https://widget.cloudinary.com/v2.0/global/all.js" type="text/javascript"></script>
            <script type="text/javascript">

                var myWidget = cloudinary.createUploadWidget({
                    cloudName: 'leduc911',
                    uploadPreset: 'v686mun2'
                }, (error, result) => {
                    if (!error && result && result.event === "success") {
                        var imgLink = result.info.secure_url;
                        document.querySelector("input[name='Image']").value = imgLink;
                        var imgPreview = document.getElementById("preview");
                        imgPreview.src = imgLink;
                        imgPreview.classList.remove("hidden");
                    }
                }
                )
                document.getElementById("upload_widget").addEventListener("click", function () {
                    alert(1);
                    myWidget.open();
                }, false);
            </script>
        }
